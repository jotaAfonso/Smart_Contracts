module Bazaar where

import Item
import DA.List
import Account

type BazaarId = ContractId Bazaar

data BazaarStateType 
  = PartyProvisioned   
  | ItemListed
  | CurrentSaleFinalized
    deriving (Eq, Show)

template Bazaar
  with 
    signatories   : [AccountId]
    signatoriesP   : [Party]
    state         : BazaarStateType
  where
    signatory signatoriesP
    ensure unique signatoriesP
    observer signatoriesP 

    -- creates an item listing
    choice ListingItem : ItemListingId with seller : AccountId, sellerP : Party, priceName : Text, priceItem : Int
      controller sellerP
      do
        seller_l <- fetch seller
        assert (seller_l.account == sellerP)
        -- assert (elem (seller_l) (this.signatories))
        
        -- changes state
        create this with
          state = ItemListed
        
        -- creates an ItemListing, with the owner, the parties involved (including owner),
        -- item's name and price
        create ItemListing with 
          owner = seller_l
          ownerAID = seller
          partiesInvolvedP = signatoriesP
          item = ItemInfo priceName priceItem
          state = ItemAvailable 

        